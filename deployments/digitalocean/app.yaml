# DigitalOcean App Platform Deployment Specification
# Motion-Index Fiber - Legal Document Processing API
name: motion-index-fiber
region: nyc
features:
  - buildpack-stack=ubuntu-22

services:
  - name: api
    source_dir: /
    github:
      repo: techjusticelab/Motion-Index
      branch: main
      deploy_on_push: true
    dockerfile_path: Dockerfile
    
    # Container configuration
    instance_count: 1
    instance_size_slug: basic-xxs  # Start small, can scale up
    
    # Auto-scaling configuration
    autoscaling:
      min_instance_count: 1
      max_instance_count: 3
      metrics:
        cpu:
          percent: 70
    
    # Health checks
    health_check:
      http_path: "/health"
      initial_delay_seconds: 30
      period_seconds: 30
      timeout_seconds: 10
      success_threshold: 1
      failure_threshold: 3
    
    # HTTP configuration
    http_port: 8003
    routes:
      - path: /
    
    # Environment variables for production
    envs:
      # Server Configuration
      - key: PORT
        value: "8003"
      - key: ENVIRONMENT
        value: "production"
      - key: PRODUCTION
        value: "true"
      - key: ALLOWED_ORIGINS
        value: "https://motionindex.techjusticelab.org,https://api.motionindex.techjusticelab.org,http://localhost:5173"
      
      # DigitalOcean Spaces (replace with your actual values)
      - key: DO_API_TOKEN
        value: "${DO_API_TOKEN}"
        type: SECRET
      - key: DO_SPACES_ACCESS_KEY
        value: "${DO_SPACES_ACCESS_KEY}"
        type: SECRET
      - key: DO_SPACES_SECRET_KEY
        value: "${DO_SPACES_SECRET_KEY}"
        type: SECRET
      - key: DO_SPACES_BUCKET
        value: "motion-index-docs"
      - key: DO_SPACES_REGION
        value: "nyc3"
      - key: DO_SPACES_CDN_DOMAIN
        value: ""
      
      # OpenSearch/Elasticsearch Configuration
      # OpenSearch (DigitalOcean) â€” prefer DO_* names used by config loader
      - key: DO_OPENSEARCH_HOST
        value: "${DO_OPENSEARCH_HOST}"
        type: SECRET
      - key: DO_OPENSEARCH_PORT
        value: "25060"
      - key: DO_OPENSEARCH_USERNAME
        value: "${DO_OPENSEARCH_USERNAME}"
      - key: DO_OPENSEARCH_PASSWORD
        value: "${DO_OPENSEARCH_PASSWORD}"
        type: SECRET
      - key: DO_OPENSEARCH_USE_SSL
        value: "true"
      - key: DO_OPENSEARCH_INDEX
        value: "documents"

      # Also set generic OPENSEARCH_* for internal config validation
      - key: OPENSEARCH_HOST
        value: "${OPENSEARCH_HOST}"
        type: SECRET
      - key: OPENSEARCH_PORT
        value: "25060"
      - key: OPENSEARCH_USERNAME
        value: "${OPENSEARCH_USERNAME}"
      - key: OPENSEARCH_PASSWORD
        value: "${OPENSEARCH_PASSWORD}"
        type: SECRET
      - key: OPENSEARCH_USE_SSL
        value: "true"
      - key: OPENSEARCH_INDEX
        value: "documents"
      
      # Supabase Authentication
      - key: SUPABASE_URL
        value: "${SUPABASE_URL}"
        type: SECRET
      - key: SUPABASE_ANON_KEY
        value: "${SUPABASE_ANON_KEY}"
        type: SECRET
      - key: SUPABASE_SERVICE_KEY
        value: "${SUPABASE_SERVICE_KEY}"
        type: SECRET
      - key: JWT_SECRET
        value: "${JWT_SECRET}"
        type: SECRET
      
      # OpenAI Configuration
      - key: OPENAI_API_KEY
        value: "${OPENAI_API_KEY}"
        type: SECRET
      - key: OPENAI_MODEL
        value: "gpt-4"
      
      # Processing Configuration
      - key: MAX_FILE_SIZE
        value: "104857600"  # 100MB
      - key: MAX_WORKERS
        value: "10"
      - key: BATCH_SIZE
        value: "50"
      - key: PROCESS_TIMEOUT
        value: "5m"
      
      # Logging Configuration
      - key: LOG_LEVEL
        value: "info"
      - key: LOG_FORMAT
        value: "json"  # JSON for better log aggregation
      - key: ENABLE_REQUEST_LOGGING
        value: "true"
      - key: ENABLE_ERROR_DETAILS
        value: "false"  # Disable in production for security
      - key: ENABLE_STACK_TRACE
        value: "false"   # Disable in production for security
